@model DivyangPortalWeb.Areas.Employee.Models.ChangePassword
@{
    ViewBag.Title = "Setting";
    Layout = "~/Areas/Employee/Views/Shared/_LayoutEmployee.cshtml";
}
<script src="~/Areas/Employee/Scripts/js/jquery.validate.min.js"></script>
<script src="~/Areas/Employee/Scripts/js/jquery.validate.unobtrusive.min.js"></script>
<div class="wrapper">
    <h1>Settings</h1>
    <h3>Personal info</h3>

    <div class="spacing">
        <div class="container">
            <div class="row">
                <div class="col-md-5">
                    <div class="block-from">
                        <h2>Personal info</h2>

                        @if (TempData["UpdateProfile"] != null)
                        {
                            if (@TempData["UpdateProfile"].ToString() == "Try again later")
                            {
                                <div class="alert alert-danger" role="alert">
                                    @TempData["UpdateProfile"]
                                </div>
                            }
                            else if (@TempData["UpdateProfile"].ToString() == "Fill mandatory fields")
                            {
                                <div class="alert alert-danger" role="alert">
                                    @TempData["UpdateProfile"]
                                </div>
                            }
                            else
                            {
                                <div class="alert alert-success" role="alert">
                                    @TempData["UpdateProfile"]
                                </div>
                            }

                        }
                        @using (Html.BeginForm("UpdateEmployeDetails", "Setting", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.HiddenFor(U => U.EmployeeDetails.EmployeeId)
                            @Html.HiddenFor(U => U.EmployeeDetails.CountryCode)
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="login-form">
                                        <h4>Your photo</h4>
                                        <div class="uploadimgs">
                                            @*<input type="file" name="images[]" id="images3" multiple class="form-control" required>*@

                                            @Html.TextBoxFor(U => U.EmployeeDetails.ProfileImagePath, new { type = "file", @class = "form-control", id = "images3", accept = "image/png, image/jpeg" })

                                            <div class="uploadimg">
                                                <div class="uploadimg-middle">
                                                    <i class="fa fa-arrow-up" aria-hidden="true"></i>
                                                    <p>Upload</p>
                                                </div>
                                            </div>
                                            @{ var imageName = Model.EmployeeDetails.ImageName;}
                                            <div class="form-group uploadimg">
                                                <div id="image_preview3" style="width:100%;">
                                                    @if (!string.IsNullOrEmpty(imageName))
                                                    {
                                                    <div class="img-div3" id="img-div30">
                                                        <img src="@Url.Content("~/Areas/Employee/Images/ProfileImage/"+imageName)" class="image3" title="Profile Image" alt="Profile Image">
                                                        <div class="middle3">
                                                            <button id="action-icon3" value="img-div30" class="btn btn-danger" role="@imageName">
                                                                <i class="fa fa-trash"></i>
                                                            </button>
                                                        </div>
                                                    </div>
                                                    }

                                                </div>
                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(U => U.EmployeeDetails.ProfileImagePath)
                                    </div>
                                </div>
                                <div class="col-md-8">
                                    <div class="des-avatar">Update your photo manually, if the photo is not set the default Avatar will be the same as your login email account.</div>
                                </div>

                                <div class="col-md-6">
                                    <div class="login-form">
                                        <h4>@Html.LabelFor(C => C.EmployeeDetails.Firstnames)</h4>
                                        @Html.EditorFor(U => U.EmployeeDetails.Firstnames, new { htmlAttributes = new { autocomplete = "off" } })
                                        @Html.ValidationMessageFor(U => U.EmployeeDetails.Firstnames)
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="login-form">
                                        <h4>@Html.LabelFor(C => C.EmployeeDetails.Lastnames)</h4>
                                        @Html.EditorFor(U => U.EmployeeDetails.Lastnames, new { htmlAttributes = new { autocomplete = "off" } })
                                        @Html.ValidationMessageFor(U => U.EmployeeDetails.Lastnames)
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="login-form">
                                        <h4>@Html.LabelFor(U => U.EmployeeDetails.Email)</h4>
                                        @Html.EditorFor(U => U.EmployeeDetails.Email, new { htmlAttributes = new { autocomplete = "off" } })
                                        @Html.ValidationMessageFor(U => U.EmployeeDetails.Email)
                                    </div>
                                </div>

                                <div class="col-md-6">
                                    <div class="login-form">
                                        <h4>Phone Number</h4>
                                        <div class="input-group-sm">
                                            @Html.TextBoxFor(U => U.EmployeeDetails.PhoneNumber, new { @class = "form-control", id = "mobile", placeholder = "Phone number", maxlength = "10", oninput = "this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');" })
                                            @Html.ValidationMessageFor(U => U.EmployeeDetails.PhoneNumber)
                                        </div>
                                    </div>
                                </div>

                                <div class="login-form">
                                    <button type="submit" class="gl-button btn button" value="Sign in" id="btnsubmit">Save changes</button>
                                </div>
                            </div>
                        }
                    </div>
                       

                    <div class="block-from">
                        <h2>Change password</h2>

                        <div class="row">
                            @if (TempData["ChangeEmployeePassword"] != null)
                            {
                                if (@TempData["ChangeEmployeePassword"].ToString() == "Invalid current password")
                                {
                                    <div class="alert alert-danger" role="alert">
                                        @TempData["ChangeEmployeePassword"]
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-success" role="alert">
                                        @TempData["ChangeEmployeePassword"]
                                    </div>
                                }

                            }
                            @using (Html.BeginForm("CheangePassword", "Setting"))
                            {
                                <div class="col-md-12">
                                    <div class="login-form">
                                        <h4>@Html.LabelFor(C => C.CurrentPassword)</h4>
                                        @Html.EditorFor(C => C.CurrentPassword, new { htmlAttributes = new { placeholder = "Enter current password", autocomplete = "off" } })
                                        <span toggle="#CurrentPassword" class="fa fa-fw fa-eye field-icon toggle-password"></span>
                                        @Html.ValidationMessageFor(C => C.CurrentPassword)
                                    </div>
                                </div>

                                <div class="col-md-12">
                                    <div class="login-form">
                                        <h4>@Html.LabelFor(C => C.NewPassword)</h4>
                                        @Html.EditorFor(C => C.NewPassword, new { htmlAttributes = new { placeholder = "Enter new password", autocomplete = "off" } })
                                        <span toggle="#NewPassword" class="fa fa-fw fa-eye field-icon toggle-password"></span>
                                        @Html.ValidationMessageFor(C => C.NewPassword)
                                    </div>
                                </div>

                                <div class="col-md-12">
                                    <div class="login-form">
                                        <h4>@Html.LabelFor(C => C.ConfirmPassword)</h4>
                                        @Html.EditorFor(C => C.ConfirmPassword, new { htmlAttributes = new { placeholder = "Enter confirm password", autocomplete = "off" } })
                                        <span toggle="#ConfirmPassword" class="fa fa-fw fa-eye field-icon toggle-password"></span>
                                        @Html.ValidationMessageFor(C => C.ConfirmPassword)
                                    </div>
                                </div>

                                <div class="login-form">
                                    <button type="submit" class="gl-button btn button" value="Sign in">Save changes</button>
                                </div>
                            }


                        </div>
                    </div>


                </div>

            </div>
        </div>
    </div>

</div>

<script src="~/Areas/Employee/Scripts/js/Setting.js"></script>
